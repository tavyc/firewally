#!/bin/bash
#
# Run regression tests
#

#
# The input file(s) has/have the following structure:
#
# # <test_title>
# <command_line>
# <input>
# ...
# EOF
# ERROR
# <output>
# ...

unset LANG LC_ADDRESS LC_ALL LC_COLLATE LC_CTYPE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES
unset LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE LC_TIME

export FIREWALLY_SIMPLE_ERRORS=1

T=`mktemp -d ${TMPDIR:-/tmp}/fwy.XXXXXX` || {
    echo >&2 "cannot create temporary directory"
    exit 1
}
[ -z "$T" -o "$T" = / ] && {
    echo >&2 "cannot create temporary directory"
    exit 1
}
trap "rm -rf $T" EXIT


firewally()
{
    command ./firewally debug /dev/stdin >$T/tmp_out
    local res=$?
    sed '/^#/d' <$T/tmp_out
    return $res
}

passed()
{
    echo "passed"
    passed_tests=$[passed_tests + 1]
}

failed()
{
    echo "FAILED: $@"
    echo "  File:    $file"
    echo "  Command: $cmd"
    echo "  Standard output:"
    sed 's/^/  | /' <$T/out
    echo "  Standard error:"
    sed 's/^/  | /' <$T/err
    echo "  Reference output:"
    sed 's/^/  | /' <$T/ref
    if [ -n "$expect_error" ]; then
	echo "  diff -u ref stderr:"
	diff -u $T/ref $T/err | sed 's/^/  | /'
    else
	echo "  diff -u ref stdout:"
	diff -u $T/ref $T/out | sed 's/^/  | /'
    fi
    echo
    failed_tests=$[failed_tests + 1]
}

run_test()
{
    echo -n "$title: "
    eval "$cmd" <$T/in >$T/out 2>$T/err
    result="${PIPESTATUS[0]}"
    if [ -n "$expect_error" ]; then
	if [ "$result" = 0 ]; then
	    failed "expected error"
	elif cmp -s $T/err $T/ref; then
	    passed
	else
	    failed "error output differs"
	fi
    else
	if [ "$result" = 0 ]; then
	    if cmp -s $T/out $T/ref; then
		if [ -n "$RUNTESTS_TRY" ]; then
		    if iptables-restore < $T/out; then
			passed
		    else
			failed
		    fi
		else
		    passed
		fi
	    else
		failed "output differs"
	    fi
	else
	    failed "got error"
	fi
    fi
    rm -f $T/out $T/err
    num_tests=$[num_tests + 1]
    title= expect_error=
}

num_tests=0 passed_tests=0 failed_tests=0
title=
for file in tests/*; do
    case "$file" in
	*~ | *.bak | .svn) continue;;
    esac

    while read line; do
	case "$line" in
	    "TEST "*)
		[ -n "$title" ] && run_test
		: >$T/ref
		: >$T/in
		title="${line#TEST }"
		expect_error=
		read cmd
		;;
	    ERROR)
		expect_error=1
		;;
	    EOF)
		mv -f $T/ref $T/in
		: >$T/ref
		;;
	    *)
		echo "$line" >> $T/ref
		;;
	esac
    done < "$file"
    run_test
done

echo "$num_tests tests: $passed_tests passed, $failed_tests failed"

if [ "$failed_tests" -gt 0 ]; then
    exit 1
else
    exit 0
fi
